name: Build and Package Cannagrow

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      # Paso 1: Revisar el código del repositorio
      - name: Check out code
        uses: actions/checkout@v3

      # Paso 2: Configurar JDK (temurin)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: 'x64'

      # Paso 3: Ejecutar mvn clean install con opciones de depuración
      - name: Build with Maven
        run: mvn clean install -X
        working-directory: ./java/Cannagrow
        shell: pwsh
        env:
          JAVA_HOME: C:\hostedtoolcache\windows\Java_Temurin-Hotspot_jdk\21.0.7-6.0\x64
          JAVA_HOME_21_X64: C:\hostedtoolcache\windows\Java_Temurin-Hotspot_jdk\21.0.7-6.0\x64

      # Paso 4: Verificar la existencia y ubicación del JAR
      - name: Find JAR file
        run: |
          Write-Host "Checking for JAR files in target directory:"
          Get-ChildItem -Path "./java/Cannagrow/target" -Filter "*.jar" | ForEach-Object { Write-Host $_.FullName }
        shell: pwsh
        
      # Paso 5: Preparar módulos JavaFX
      - name: Download JavaFX jmods
        run: |
          # Crear directorio para JavaFX dentro del directorio del proyecto
          New-Item -ItemType Directory -Force -Path ./java/Cannagrow/jmods
          # Descargar JavaFX jmods
          Invoke-WebRequest -Uri "https://download2.gluonhq.com/openjfx/21/openjfx-21_windows-x64_bin-jmods.zip" -OutFile "./java/Cannagrow/javafx-jmods.zip"
          # Extraer el archivo zip
          Expand-Archive -Path "./java/Cannagrow/javafx-jmods.zip" -DestinationPath "./java/Cannagrow/jmods" -Force
          # Listar archivos para verificar
          Write-Host "Contenido del directorio jmods:"
          Get-ChildItem -Path "./java/Cannagrow/jmods" -Recurse
        shell: pwsh

      # Paso 6: Crear el ejecutable con jpackage con todos los módulos JavaFX necesarios
      - name: Package with jpackage
        run: |
          # Verificar que los jmods existen
          Write-Host "Verificando directorios:"
          Get-ChildItem -Path "." -Directory
          Write-Host "Verificando directorio jmods:"
          Get-ChildItem -Path "./jmods" -Directory
          
          # Obtener la ruta completa a los jmods
          $jmods_path = Resolve-Path "./jmods/javafx-jmods-21"
          Write-Host "JavaFX JMods path: $jmods_path"
          
          # Crear runtime image con módulos JavaFX completos y soporte para SQL
          jlink --add-modules java.base,java.desktop,java.logging,java.sql,java.naming,java.security.jgss,javafx.controls,javafx.fxml,javafx.graphics,javafx.web,javafx.media,javafx.swing `
                --module-path "$jmods_path" `
                --output runtime `
                --strip-debug `
                --no-header-files `
                --no-man-pages `
                --compress=2

          # Verificar contenido del target
          Write-Host "Contenido del directorio target:"
          Get-ChildItem -Path "./target" -Filter "*.jar"
          
          # Preparar directorio para bibliotecas externas
          New-Item -ItemType Directory -Force -Path ./libs
          
          # Copiar MySQL Connector y BCrypt desde la carpeta .m2
          Copy-Item "$HOME/.m2/repository/mysql/mysql-connector-java/8.0.33/mysql-connector-java-8.0.33.jar" -Destination "./libs/"
          Copy-Item "$HOME/.m2/repository/org/mindrot/jbcrypt/0.4/jbcrypt-0.4.jar" -Destination "./libs/"
          
          # Listar el contenido del directorio de bibliotecas
          Write-Host "Contenido del directorio libs:"
          Get-ChildItem -Path "./libs"
          
          # Crear el instalador con terminal para debug y opciones de memoria
          jpackage --input ./target `
            --name CannagrowApp `
            --main-jar Cannagrow-1.0-SNAPSHOT.jar `
            --main-class com.example.cannagrow.Main `
            --type exe `
            --runtime-image runtime `
            --win-dir-chooser `
            --win-shortcut `
            --win-menu `
            --win-console `
            --java-options "-Xms256m -Xmx512m -XX:+ShowCodeDetailsInExceptionMessages -Djavafx.verbose=true -Djava.security.manager=allow" `
            --app-version "1.0.0" `
            --add-modules java.sql,java.naming `
            --module-path "./libs" `
            --verbose
        shell: pwsh
        working-directory: ./java/Cannagrow
        env:
          JAVA_HOME: C:\hostedtoolcache\windows\Java_Temurin-Hotspot_jdk\21.0.7-6.0\x64
          JAVA_HOME_21_X64: C:\hostedtoolcache\windows\Java_Temurin-Hotspot_jdk\21.0.7-6.0\x64

      # Paso 7: Subir los archivos generados como artefacto
      - name: Upload the executable
        uses: actions/upload-artifact@v4
        with:
          name: CannagrowApp
          path: |
            ./java/Cannagrow/*.exe
            ./java/Cannagrow/CannagrowApp/**
