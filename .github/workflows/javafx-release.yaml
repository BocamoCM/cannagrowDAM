name: Build and Package Cannagrow

on:
  push:
    branches:
      - java

jobs:
  build:
    runs-on: windows-latest
    steps:
      # Paso 1: Revisar el código del repositorio
      - name: Check out code
        uses: actions/checkout@v3  # Updated to v3

      # Paso 2: Configurar JDK (temurin)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: 'x64'

      # Paso 3: Ejecutar mvn clean install
      - name: Build with Maven
        run: mvn clean install
        working-directory: ./java/Cannagrow
        shell: pwsh
        env:
          JAVA_HOME: C:\hostedtoolcache\windows\Java_Temurin-Hotspot_jdk\21.0.7-6.0\x64
          JAVA_HOME_21_X64: C:\hostedtoolcache\windows\Java_Temurin-Hotspot_jdk\21.0.7-6.0\x64

      # Paso 4: Verificar la existencia y ubicación del JAR
      - name: Find JAR file
        run: |
          Write-Host "Checking for JAR files in target directory:"
          Get-ChildItem -Path "./java/Cannagrow/target" -Filter "*.jar" | ForEach-Object { Write-Host $_.FullName }
        shell: pwsh
        
      # Paso 5: Preparar módulos JavaFX
      - name: Download JavaFX jmods
        run: |
          New-Item -ItemType Directory -Force -Path ./jmods
          Invoke-WebRequest -Uri "https://download2.gluonhq.com/openjfx/21/openjfx-21_windows-x64_bin-jmods.zip" -OutFile "./javafx-jmods.zip"
          Expand-Archive -Path "./javafx-jmods.zip" -DestinationPath "./jmods" -Force
          Get-ChildItem -Path "./jmods" -Recurse

      # Paso 6: Crear el ejecutable con jpackage
      - name: Package with jpackage
        run: |
          # Crear un runtime image con JavaFX integrado
          $jmods_path = Resolve-Path "../jmods/javafx-jmods-21"
          Write-Host "JavaFX JMods path: $jmods_path"
          
          jlink --add-modules java.base,java.desktop,javafx.controls,javafx.fxml,javafx.graphics `
                --module-path "$jmods_path" `
                --output runtime `
                --strip-debug `
                --no-header-files `
                --no-man-pages `
                --compress=2

          # Crear el instalador con la runtime image personalizada
          jpackage --input ./target `
            --name CannagrowApp `
            --main-jar Cannagrow-1.0-SNAPSHOT.jar `
            --main-class com.example.cannagrow.Main `
            --type exe `
            --runtime-image runtime `
            --win-dir-chooser `
            --win-shortcut `
            --win-menu `
            --app-version "1.0.0" `
            --verbose `
            --win-console
        shell: pwsh
        working-directory: ./java/Cannagrow
        env:
          JAVA_HOME: C:\hostedtoolcache\windows\Java_Temurin-Hotspot_jdk\21.0.7-6.0\x64
          JAVA_HOME_21_X64: C:\hostedtoolcache\windows\Java_Temurin-Hotspot_jdk\21.0.7-6.0\x64

      # Paso 6: Subir los archivos generados como artefacto
      - name: Upload the executable
        uses: actions/upload-artifact@v4  # Updated to v4 (latest as of May 2025)
        with:
          name: CannagrowApp
          path: |
            ./java/Cannagrow/*.exe
            ./java/Cannagrow/CannagrowApp/**
